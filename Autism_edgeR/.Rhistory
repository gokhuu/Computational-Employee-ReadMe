useModel = useModel,
errorCovariance = errorCovariance,
verbose = TRUE,
pvalue.hist = TRUE,
min.pv.by.genesnp = FALSE,
noFDRsaveMemory = FALSE
);
unlink(output_file_name)
me_stan_cv_qq = Matrix_eQTL_engine(
snps = snps,
gene = gene_stan,
cvrt = cvrt_applied,
output_file_name = output_file_name,
pvOutputThreshold = pvOutputThreshold,
useModel = useModel,
errorCovariance = errorCovariance,
verbose = TRUE,
pvalue.hist = "qqplot",
min.pv.by.genesnp = FALSE,
noFDRsaveMemory = FALSE
);
unlink(output_file_name)
#unclean data
cat('Analysis done in: ', me$time.in.sec, ' seconds', '\n');
cat('Detected eQTLs:', '\n');
show(me$all$eqtls)
#removed zero
cat('Analysis done in: ', me_0$time.in.sec, ' seconds', '\n');
cat('Detected eQTLs:', '\n');
show(me_0$all$eqtls)
#log normalized data
cat('Analysis done in: ', me_log$time.in.sec, ' seconds', '\n');
cat('Detected eQTLs:', '\n');
show(me_log$all$eqtls)
#Python standard normalized data
cat('Analysis done in: ', me_stan$time.in.sec, ' seconds', '\n');
cat('Detected eQTLs:', '\n');
show(me_stan$all$eqtls)
#log normalized data
cat('Analysis done in: ', me_log_cv$time.in.sec, ' seconds', '\n');
cat('Detected eQTLs:', '\n');
show(me_log$all$eqtls)
#standard noramlized data
cat('Analysis done in: ', me_stan_cv$time.in.sec, ' seconds', '\n');
cat('Detected eQTLs:', '\n');
show(me_stan$all$eqtls)
#unclean data
plot(me)
#zero data
plot(me_0)
#log normlized data
plot(me_log)
plot(me_log_qq)
#standard normalized data
plot(me_stan)
plot(me_stan_qq)
#log normlized data
plot(me_log_cv)
plot(me_log_cv_qq)
#standard normalized data
plot(me_stan_cv)
plot(me_stan_cv_qq)
#standard normalized data
plot(me_stan_cv)
plot(me_stan_cv_qq,cex=0.5, pch = 19)
#standard normalized data
plot(me_stan)
plot(me_stan_qq, cex=0.5, pch =19)
#standard normalized data
plot(me_stan)
plot(me_stan_qq)
show(me_stan_cv$all$min.pv.snps);
show(me_stan_cv$all$min.pv.gene);
#standardized and covariates data
me_stan_cv = Matrix_eQTL_engine(
snps = snps,
gene = gene_stan,
cvrt = cvrt_applied,
output_file_name = output_file_name,
pvOutputThreshold = pvOutputThreshold,
useModel = useModel,
errorCovariance = errorCovariance,
verbose = TRUE,
pvalue.hist = TRUE,
min.pv.by.genesnp = FALSE,
noFDRsaveMemory = FALSE
);
unlink(output_file_name)
me_stan_cv_qq = Matrix_eQTL_engine(
snps = snps,
gene = gene_stan,
cvrt = cvrt_applied,
output_file_name = output_file_name,
pvOutputThreshold = pvOutputThreshold,
useModel = useModel,
errorCovariance = errorCovariance,
verbose = TRUE,
pvalue.hist = "qqplot",
min.pv.by.genesnp = TRUE,
noFDRsaveMemory = FALSE
);
unlink(output_file_name)
#standardized and covariates data
me_stan_cv = Matrix_eQTL_engine(
snps = snps,
gene = gene_stan,
cvrt = cvrt_applied,
output_file_name = output_file_name,
pvOutputThreshold = pvOutputThreshold,
useModel = useModel,
errorCovariance = errorCovariance,
verbose = TRUE,
pvalue.hist = TRUE,
min.pv.by.genesnp = TRUE,
noFDRsaveMemory = FALSE
);
unlink(output_file_name)
me_stan_cv_qq = Matrix_eQTL_engine(
snps = snps,
gene = gene_stan,
cvrt = cvrt_applied,
output_file_name = output_file_name,
pvOutputThreshold = pvOutputThreshold,
useModel = useModel,
errorCovariance = errorCovariance,
verbose = TRUE,
pvalue.hist = "qqplot",
min.pv.by.genesnp = TRUE,
noFDRsaveMemory = FALSE
);
unlink(output_file_name)
show(me_stan_cv$all$min.pv.snps);
show(me_stan_cv$all$min.pv.gene);
#standard normalized data
plot(me_stan_cv)
plot(me_stan_cv_qq,cex=0.5, pch = 19)
library(MatrixEQTL)
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Work Prep");
library(MatrixEQTL)
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Mito Eqtl"
library(MatrixEQTL)
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Work Prep");
library(MatrixEQTL)
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Work Prep");
allele = read.csv ="allele.csv";
count_expression= "count_expression.csv";
count_expression_edit = "count_expression_no_zero.csv";
count_epression_log_norm = "count_expression_log_norm.csv";
count_epression_standard_norm = "count_expression_standard_norm.csv";
co_var = "mito_covariates.csv";
useModel = modelLINEAR
covariates = character();
covariates_applied = co_var;
output_file_name = tempfile();
pvOutputThreshold = 1e-2;
errorCovariance = numeric();
cisDist = 1e6;
#Genotype
snps = SlicedData$new();
snps$fileDelimiter = ",";
snps$fileOmitCharacters = "NA";
snps$fileSkipRows = 1;
snps$fileSkipColumns = 1;
snps$fileSliceSize = 2000;
snps$LoadFile(allele);
#Expression
gene = SlicedData$new();
gene$fileDelimiter = ",";
gene$fileOmitCharacters = "NA";
gene$fileSkipRows = 1;
gene$fileSkipColumns = 1;
gene$fileSliceSize = 2000;
gene$LoadFile(count_expression);
#covariates
cvrt = SlicedData$new();
cvrt$fileDelimiter = ",";
cvrt$fileOmitCharacters = "NA";
cvrt$fileSkipRows = 1;
cvrt$fileSkipColumns = 1;
if(length(covariates)>0) {
cvrt$LoadFile(covariates);}
#Expression
gene_norm = SlicedData$new();
gene_norm$fileDelimiter = ",";
gene_norm$fileOmitCharacters = "NA";
gene_norm$fileSkipRows = 1;
gene_norm$fileSkipColumns = 1;
gene_norm$fileSliceSize = 2000;
gene_norm$LoadFile("count_expression_normalizer.csv");
#Expression
gene_minmax = SlicedData$new();
gene_minmax$fileDelimiter = ",";
gene_minmax$fileOmitCharacters = "NA";
gene_minmax$fileSkipRows = 1;
gene_minmax$fileSkipColumns = 1;
gene_minmax$fileSliceSize = 2000;
gene_minmax$LoadFile("count_expression_minmax_norm.csv");
install.packages('RNOmni')
install.packages('RNOmni')
source("http://bioconductor.org/biocLite.R")
biocLite("edgeR")
source("http://bioconductor.org/biocLite.R")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::install("edgeR")
getwd()
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("15q_dup_fpkm.csv")
m = as.matrix(counts)
g <- c('Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case')
d <- DGEList(counts = m, group = g)
d <- calcNormFactors(d)
co <- read.csv('15qdup_pc1.csv',header=FALSE)
d <- estimateDisp(d,design=co)
de.com <- exactTest(d,pair=c("Case","Control"))
topTags(de.com)
pval <- de.com$table$PValue
write.csv(pval,"15qdup_pval_with_covar.csv")
write.csv(de.com$table, "15qdup_covar_full_table.csv")
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("15q_dup_fpkm.csv")
m = as.matrix(counts)
g <- c('Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case')
d <- DGEList(counts = m, group = g)
d <- calcNormFactors(d,pair=c("Case","Control"))
d <- estimateCommonDisp(d)
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("15q_dup_fpkm.csv")
m = as.matrix(counts)
g <- c('Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case')
d <- DGEList(counts = m, group = g)
d <- calcNormFactors(d,pair=c("Case","Control"))
d <- estimateCommonDisp(d)
de.com <- exactTest(d)
write.csv(de.com$table$PValue,"15p_dup_pval.csv")
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("16p11_fpkm.csv")
m = as.matrix(counts)
g <- c('Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case')
d <- DGEList(counts = m, group = g)
d <- calcNormFactors(d)
co <- read.csv('16p11_pc1.csv',header=FALSE)
d <- estimateDisp(d,design=co)
de.com <- exactTest(d,pair=c("Case","Control"))
topTags(de.com)
pval <- de.com$table$PValue
write.csv(pval,"16p11_pval_with_covar.csv")
write.csv(de.com$table, "16p11_table_covar.csv")
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("16p11_fpkm.csv")
m = as.matrix(counts)
g <- c('Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','case')
d <- DGEList(counts = m, group = g)
d <- calcNormFactors(d)
d <- estimateCommonDisp(d,pair=c("Case","Control"))
de.com <- exactTest(d)
topTags(de.com)
write.csv(de.com$table$pvalue, "16p11_pval.csv")
pval <- de.com$table$PValue
write.csv(pval,"16p11_pval_without_covar.csv")
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("15q_dup_fpkm.csv")
m = as.matrix(counts)
g <- c('Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case')
d <- DGEList(counts = m, group = g)
d <- calcNormFactors(d,pair=c("Case","Control"))
d <- estimateCommonDisp(d)
de.com <- exactTest(d)
write.csv(de.com$table$PValue,"15p_dup_pval_redo.csv")
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("15q_dup_fpkm.csv")
m = as.matrix(counts)
g <- c('Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case')
d <- DGEList(counts = m, group = g)
d <- calcNormFactors(d)
co <- read.csv('15qdup_pc1.csv',header=FALSE)
d <- estimateDisp(d,design=co)
de.com <- exactTest(d,pair=c("Case","Control"))
topTags(de.com)
pval <- de.com$table$PValue
write.csv(pval,"15qdup_pval_with_covar_redo.csv")
write.csv(de.com$table, "15qdup_covar_full_table_redo.csv")
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("15q_dup_fpkm.csv")
m = as.matrix(counts)
g <- c('Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case')
d <- DGEList(counts = m, group = g)
d <- calcNormFactors(d)
co <- read.csv('15qdup_pc1.csv',header=FALSE)
d <- estimateDisp(d,design=co)
de.com <- exactTest(d,pair=c("Case","Control"))
topTags(de.com)
print(de.com$table$fdr)
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("16p11_fpkm.csv")
m = as.matrix(counts)
g <- c('Control.PGP1','Control.PGP1','Control.PGP1','Control.GM23716','Control.GM23716','Control.GM23716','Control.GM23720','Control.GM23720','Control.GM23720','Control.GM25256','Control.GM25256','Control.GM25256','Control.BXS0110','Control.BXS0110','Control.BXS0110','Control.BXS0111','Control.BXS0111','Control.BXS0111','Control.BYS0112','Control.BYS0112','Control.BYS0112','Control.BXS0114','Control.BXS0114','Control.BXS0114','Control.BXS0115','Control.BXS0115','Control.BXS0115','Control.BXS0116','Control.BXS0116','Control.BXS0116','Control.BXS0117','Control.BXS0117','Control.BXS0117','Control.902','Control.902','Control.902','Case.14758X3','Case.14758X3','Case.14758X3','Case.14799X1','Case.14799X1','Case.14799X1','Case.14824X13','Case.14824X13','Case.14824X13','Case.14763x7','Case.14763x7','Case.14763x7','Case.14739x3','Case.14739x3','Case.14765x2','Case.14765x2','Case.14765x2','Case.14710x6','Case.14781x16','Case.14781x16','Case.14781x16','Case.14746x8','Case.14746x8')
View(counts)
d <- DGEList(counts = m, group = g)
d <- calcNormFactors(d)
co <- read.csv('16p11_pc1.csv',header=FALSE)
design <- model.matrix(~ 0 + group + co)
design <- model.matrix(~ 0 + g + co)
design <- model.matrix(~ 0 + g, co)
View(design)
design <- model.matrix(~ 0 + g, co)
colnames(design) <- levels(g)
View(design)
design <- model.matrix(~ 0 + g, co)
View(design)
View(design)
counts <- read.csv("16p11_fpkm.csv")
m = as.matrix(counts)
groups <- c('Control.PGP1','Control.PGP1','Control.PGP1','Control.GM23716','Control.GM23716','Control.GM23716','Control.GM23720','Control.GM23720','Control.GM23720','Control.GM25256','Control.GM25256','Control.GM25256','Control.BXS0110','Control.BXS0110','Control.BXS0110','Control.BXS0111','Control.BXS0111','Control.BXS0111','Control.BYS0112','Control.BYS0112','Control.BYS0112','Control.BXS0114','Control.BXS0114','Control.BXS0114','Control.BXS0115','Control.BXS0115','Control.BXS0115','Control.BXS0116','Control.BXS0116','Control.BXS0116','Control.BXS0117','Control.BXS0117','Control.BXS0117','Control.902','Control.902','Control.902','Case.14758X3','Case.14758X3','Case.14758X3','Case.14799X1','Case.14799X1','Case.14799X1','Case.14824X13','Case.14824X13','Case.14824X13','Case.14763x7','Case.14763x7','Case.14763x7','Case.14739x3','Case.14739x3','Case.14765x2','Case.14765x2','Case.14765x2','Case.14710x6','Case.14781x16','Case.14781x16','Case.14781x16','Case.14746x8','Case.14746x8')
d <- DGEList(counts = m, group = groups)
d <- calcNormFactors(d)
co <- read.csv('16p11_pc1.csv',header=FALSE)
design <- model.matrix(~ 0+groups, co)
design <- model.matrix(~ 0+groups, co)
colnames(design) <- levels(groups)
View(design)
design <- model.matrix(~ 0+groups, co)
#colnames(design) <- levels(groups)
View(design)
View(design)
design <- model.matrix(~ 0, co)
#colnames(design) <- levels(groups)
View(design)
View(design)
design <- model.matrix(~groups, co)
#colnames(design) <- levels(groups)
View(design)
design <- model.matrix(~0+groups, co)
#colnames(design) <- levels(groups)
design <- model.matrix(~0+groups, co)
colnames(design) <- groups
View(design)
design <- model.matrix(~0+groups, co)
colnames(design) <- levels(co)
View(design)
design <- model.matrix(~0+groups, co)
write.csv(design,'design_mat.csv')
design <- model.matrix(~0+groups, co)
write.csv(design,'design_mat.csv')
design <-read.csv("design_mat.csv",header = TRUE)
design <-read.csv("design_mat.csv",header = TRUE)
design <- as.matrix(design)
View(design)
d <- estimateDisp(d,design, robust = TRUE)
d <- estimateDisp(d,design)
fit <- glmFit(d, design = design)
topTags(lrt)
fit <- glmFit(d, design = design)
lrt <- glmLRT(fit,coef=2)
topTags(lrt)
pval <- lrt$table$PValue
write.csv(pval,'16p11_pval_rep_covar.csv')
write.csv(pval,'16p11_pval_rep_covar.csv')
write.csv(pval,'16p11_pval_rep_covar.csv')
write.csv(pval,'16p11_pval_rep_covar.csv')
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("16p11_fpkm.csv")
m = as.matrix(counts)
g <- c('Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control.BYS0112','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case')
d <- DGEList(counts = m, group = g)
d <- calcNormFactors(d)
co <- read.csv('16p11_pc1.csv',header=FALSE)
d <- estimateDisp(d,design=co)
de.com <- exactTest(d,pair=c("Case","Control"))
topTags(de.com)
pval <- de.com$table$PValue
write.csv(pval,"16p11_pval_with_covar.csv")
write.csv(de.com$table, "16p11_table_covar.csv")
pval <- de.com$table$PValue
write.csv(pval,"16p11_pval_with_covar.csv")
write.csv(de.com$table, "16p11_table_covar.csv")
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("16p11_fpkm.csv")
m = as.matrix(counts)
g <- c('Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control.BYS0112','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case')
d <- DGEList(counts = m, group = g)
d <- calcNormFactors(d)
d <- estimateCommonDisp(d,pair=c("Case","Control"))
de.com <- exactTest(d)
topTags(de.com)
pval <- de.com$table$PValue
write.csv(pval,"16p11_pval_without_covar.csv")
pval <- de.com$table$PValue
write.csv(pval,"16p11_pval_without_covar.csv")
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("15q_dup_fpkm.csv")
m = as.matrix(counts)
g <- c('Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control.BYS0112','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case')
d <- DGEList(counts = m, group = g)
d <- calcNormFactors(d,pair=c("Case","Control"))
d <- estimateCommonDisp(d)
de.com <- exactTest(d)
write.csv(de.com$table$PValue,"15p_dup_pval_redo.csv")
write.csv(de.com$table$PValue,"15p_dup_pval_redo.csv")
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("15q_dup_fpkm.csv")
m = as.matrix(counts)
g <- c('Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control.BYS0112','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case')
d <- DGEList(counts = m, group = g)
d <- calcNormFactors(d,pair=c("Case","Control"))
d <- estimateCommonDisp(d)
de.com <- exactTest(d)
write.csv(de.com$table$PValue,"15p_dup_pval_redo.csv")
print(de.com$table$FDR)
print(de.com$table$PValue)
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("15q_dup_fpkm.csv")
m = as.matrix(counts)
g <- c('Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case')
d <- DGEList(counts = m, group = g)
d <- calcNormFactors(d)
d <- calcNormFactors(d)
co <- read.csv('15qdup_pc1.csv',header=FALSE)
d <- estimateDisp(d,design=co)
de.com <- exactTest(d,pair=c("Case","Control"))
topTags(de.com)
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
d <- DGEList(counts = m, group=groups)
d <- DGEList(counts = m, groups=groups)
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("16p11_fpkm.csv")
m = as.matrix(counts)
groups <- c('Control.PGP1','Control.PGP1','Control.PGP1','Control.GM23716','Control.GM23716','Control.GM23716','Control.GM23720','Control.GM23720','Control.GM23720','Control.GM25256','Control.GM25256','Control.GM25256','Control.BXS0110','Control.BXS0110','Control.BXS0110','Control.BXS0111','Control.BXS0111','Control.BXS0111','Control.BYS0112','Control.BYS0112','Control.BYS0112','Control.BXS0114','Control.BXS0114','Control.BXS0114','Control.BXS0115','Control.BXS0115','Control.BXS0115','Control.BXS0116','Control.BXS0116','Control.BXS0116','Control.BXS0117','Control.BXS0117','Control.BXS0117','Control.902','Control.902','Control.902','Case.1601-1','Case.1601-2','Case.1601-3','Case.1401-1','Case.1401-2','Case.1401-3','Case.1001-1','Case.1001-2','Case.1001-3','Case.901-1','Case.901-2','Case.901-3')
co <- read.csv('15qdup_pc1.csv',header=FALSE)
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("16p11_fpkm.csv")
m = as.matrix(counts)
groups <- c('Control.PGP1','Control.PGP1','Control.PGP1','Control.GM23716','Control.GM23716','Control.GM23716','Control.GM23720','Control.GM23720','Control.GM23720','Control.GM25256','Control.GM25256','Control.GM25256','Control.BXS0110','Control.BXS0110','Control.BXS0110','Control.BXS0111','Control.BXS0111','Control.BXS0111','Control.BYS0112','Control.BYS0112','Control.BYS0112','Control.BXS0114','Control.BXS0114','Control.BXS0114','Control.BXS0115','Control.BXS0115','Control.BXS0115','Control.BXS0116','Control.BXS0116','Control.BXS0116','Control.BXS0117','Control.BXS0117','Control.BXS0117','Control.902','Control.902','Control.902','Case.1601-1','Case.1601-2','Case.1601-3','Case.1401-1','Case.1401-2','Case.1401-3','Case.1001-1','Case.1001-2','Case.1001-3','Case.901-1','Case.901-2','Case.901-3')
co <- read.csv('15qdup_pc1.csv',header=FALSE)
d <- DGEList(counts = m, groups=groups)
d <- DGEList(counts = m, group=groups)
counts <- read.csv("15q_dup_fpkm.csv")
m = as.matrix(counts)
groups <- c('Control.PGP1','Control.PGP1','Control.PGP1','Control.GM23716','Control.GM23716','Control.GM23716','Control.GM23720','Control.GM23720','Control.GM23720','Control.GM25256','Control.GM25256','Control.GM25256','Control.BXS0110','Control.BXS0110','Control.BXS0110','Control.BXS0111','Control.BXS0111','Control.BXS0111','Control.BYS0112','Control.BYS0112','Control.BYS0112','Control.BXS0114','Control.BXS0114','Control.BXS0114','Control.BXS0115','Control.BXS0115','Control.BXS0115','Control.BXS0116','Control.BXS0116','Control.BXS0116','Control.BXS0117','Control.BXS0117','Control.BXS0117','Control.902','Control.902','Control.902','Case.1601-1','Case.1601-2','Case.1601-3','Case.1401-1','Case.1401-2','Case.1401-3','Case.1001-1','Case.1001-2','Case.1001-3','Case.901-1','Case.901-2','Case.901-3')
co <- read.csv('15qdup_pc1.csv',header=FALSE)
d <- DGEList(counts = m, group=groups)
d$samples
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("15q_dup_fpkm.csv")
m = as.matrix(counts)
groups <- c('PGP1','PGP1','PGP1','GM23716','GM23716','GM23716','GM23720','GM23720','GM23720','GM25256','GM25256','GM25256','BXS0110','BXS0110','BXS0110','BXS0111','BXS0111','BXS0111','BYS0112','BYS0112','BYS0112','BXS0114','BXS0114','BXS0114','BXS0115','BXS0115','BXS0115','BXS0116','BXS0116','BXS0116','BXS0117','BXS0117','BXS0117','902','902','902','1601','1601','1601','1401','1401','1401','1001','1001','1001','901','901','901')
replicate <- c('Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case')
co <- read.csv('15qdup_pc1.csv',header=FALSE)
setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
d$samples$replicate <- replicate
print(d$samples)
print(d$samples)
counts <- read.csv("15q_dup_fpkm.csv")
m = as.matrix(counts)
groups <- c('PGP1','PGP1','PGP1','GM23716','GM23716','GM23716','GM23720','GM23720','GM23720','GM25256','GM25256','GM25256','BXS0110','BXS0110','BXS0110','BXS0111','BXS0111','BXS0111','BYS0112','BYS0112','BYS0112','BXS0114','BXS0114','BXS0114','BXS0115','BXS0115','BXS0115','BXS0116','BXS0116','BXS0116','BXS0117','BXS0117','BXS0117','902','902','902','1601','1601','1601','1401','1401','1401','1001','1001','1001','901','901','901')
replicate <- c('Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Control','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case','Case')
co <- read.csv('15qdup_pc1.csv',header=FALSE)
d <- DGEList(counts = m, group=groups)
d$samples$replicate <- replicate
print(d$samples)
design <- model.matrix(~0+groups+replicate,co)
d <- estimateDisp(d,design=design)
d <- estimateDisp(d,design)
d <- estimateDisp(d,design)
design <- model.matrix(~0+group,co)
design <- model.matrix(~0+groups,co)
d <- estimateDisp(d,design)
#setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("15q_dup_fpkm_avg_threshold_no_index.csv",header=TRUE)
m <- as.matrix(counts)
group <- as.factor(rep(c("Control","Case"),c(12,4)))
co <- read.csv('15q_dup_pc1.csv',header=FALSE)
#setwd("C:/Users/khuub/One Drive/OneDrive/Desktop/Projects/projects/Autism_edgeR/")
library(edgeR)
counts <- read.csv("15q_dup_fpkm_avg_threshold_no_index.csv",header=TRUE)
m <- as.matrix(counts)
group <- as.factor(rep(c("Control","Case"),c(12,4)))
co <- read.csv('15qdup_pc1.csv',header=FALSE)
d <- DGEList(counts = m, group=group)
#keep <- filterByExpr(d,group=group)
#d <- d[keep,,keep.lib.sizes=FALSE]
d <- calcNormFactors(d, method="RLE")
design <- model.matrix(~0+group,co)
d <- estimateDisp(d,design)
de.com <- exactTest(d,pair = c("Case","Control"))
#Results
topTags(de.com)
hist(de.com$table$PValue,prob=TRUE)
write.csv(de.com$table,"test_no_filter_15q_table.csv")
